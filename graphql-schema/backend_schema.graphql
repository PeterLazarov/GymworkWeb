"""
Custom scalar types
"""
scalar JSON
scalar ISO8601Date
scalar ISO8601DateTime

"""
Objects which may be commented on
""" # TODO comment on the union
union LoginError = SomethingWrong

"""
Autogenerated input type of Login
"""
input LoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  emailAddress: String!
  password: String!
}

"""
Autogenerated return type of Login.
"""
type LoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [LoginError!]!
  success: Boolean!
}

"""
Autogenerated input type of Logout
"""
input LogoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of Logout.
"""
type LogoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  logout: Boolean!
}

"""
Exercise type representing a workout exercise
"""
type Exercise implements Node {
  id: ID!
  name: String!
  equipment: [String!]
  position: String
  stance: String
  muscleAreas: [String!]
  muscles: [String!]
  instructions: [String!]
  tips: [String!]
  measurements: JSON
  isFavorite: Boolean
}

"""
Input type for creating an exercise
"""
input CreateExerciseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  equipment: [String!]
  position: String
  stance: String
  muscleAreas: [String!]
  muscles: [String!]
  instructions: [String!]
  tips: [String!]
  measurements: JSON
  isFavorite: Boolean
}

"""
Return type for creating an exercise
"""
type CreateExercisePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  exercise: Exercise
  errors: [String!]
}

"""
Workout set type representing a set in a workout step
"""
type WorkoutSet implements Node {
  id: ID!
  reps: Int!
  weightMcg: Int!
}

"""
Workout step type representing a step in a workout
"""
type WorkoutStep implements Node {
  id: ID!
  exercises: [Exercise!]!
  sets: [WorkoutSet!]!
}

"""
Input type for creating a workout step
"""
input CreateWorkoutStepInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  workoutId: ID!
}

"""
Return type for creating a workout step
"""
type CreateWorkoutStepPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  workoutStep: WorkoutStep
  errors: [ValidationError!]
}

"""
Validation error type
"""
type ValidationError {
  field: String!
  message: String!
}

"""
Workout type representing a workout session
"""
type Workout implements Node {
  id: ID!
  date: ISO8601DateTime!
  steps: [WorkoutStep!]!
}

"""
Input type for creating a workout
"""
input CreateWorkoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  date: ISO8601DateTime!
}

"""
Return type for creating a workout
"""
type CreateWorkoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  workout: Workout
  errors: [ValidationError!]
}

type Mutation {
  """
  Login
  """
  login(
    """
    Parameters for Login
    """
    input: LoginInput!
  ): LoginPayload!

  """
  Logout
  """
  logout(
    """
    Parameters for Logout
    """
    input: LogoutInput!
  ): LogoutPayload!

  """
  SetPassword
  """
  setPassword(
    """
    Parameters for SetPassword
    """
    input: SetPasswordInput!
  ): SetPasswordPayload!

  """
  Signup
  """
  signup(
    """
    Parameters for Signup
    """
    input: SignupInput!
  ): SignupPayload!

  """
  Verify email address
  """
  verifyEmailAddress(
    """
    Parameters for VerifyEmailAddress
    """
    input: VerifyEmailAddressInput!
  ): VerifyEmailAddressPayload!

  """
  Create a new exercise
  """
  createExercise(
    """
    Parameters for creating an exercise
    """
    input: CreateExerciseInput!
  ): CreateExercisePayload!

  """
  Create a new workout
  """
  createWorkout(
    """
    Parameters for creating a workout
    """
    input: CreateWorkoutInput!
  ): CreateWorkoutPayload!

  """
  Create a new workout step
  """
  createWorkoutStep(
    """
    Parameters for creating a workout step
    """
    input: CreateWorkoutStepInput!
  ): CreateWorkoutStepPayload!
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type Query {
  """
  Fetch current session
  """
  me: User

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]

  """
  Fetch all exercises
  """
  exercises: [Exercise!]!

  """
  Fetch workouts by date
  """
  workouts(date: ISO8601Date!): [Workout!]!
}

"""
Autogenerated input type of SetPassword
"""
input SetPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  password: String!
}

"""
Autogenerated return type of SetPassword.
"""
type SetPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User
}

"""
Objects which may be commented on
""" # TODO comment on the union
union SignupError = Taken

"""
Autogenerated input type of Signup
"""
input SignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  emailAddress: String!
}

"""
Autogenerated return type of Signup.
"""
type SignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [SignupError!]!
  success: Boolean!
}

type SomethingWrong {
  message: String!
}

type Taken {
  message: String!
}

type User implements Node {
  emailAddress: String!

  """
  ID of the object.
  """
  id: ID!
}

"""
Autogenerated input type of VerifyEmailAddress
"""
input VerifyEmailAddressInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signedId: String!
}

"""
Autogenerated return type of VerifyEmailAddress.
"""
type VerifyEmailAddressPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  success: Boolean!
}
